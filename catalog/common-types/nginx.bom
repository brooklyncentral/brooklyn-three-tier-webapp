#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
brooklyn.catalog:
  version: 1.1.0-SNAPSHOT # BROOKLYN_THREE_TIER_WEBAPP_VERSION
  publish:
    name: &nginXName NginX
    description: &nginXDescription A single Nginx server. Provides HTTP and reverse proxy services.
    license_code: Apache-2.0

  items:
    - id: org.apache.brooklyn.entity.proxy.nginx
      name: *nginXName
      iconUrl: classpath://icons/nginx.jpeg
      item:
        name: *nginXName
        type: org.apache.brooklyn.entity.software.base.VanillaSoftwareProcess
        
        brooklyn.parameters:
          - name: app.port
            label: NginX Port
            description: |
              If supplied, the server will download a creation SQL script from this URL and
              initialize the DB with it.
              To have the orchestration server download it, or to use a classpath URL with a bundled resource,
              use files.customize writing from that URL to creation-script.sql instead of this. 
            type: string
            default: 80
          - name: nginx.sticky
            description: Whether to use sticky sessions (no sure where this is used)
            type: boolean
            default: true
          - name: server.list
            type: string
            description: Comma separated list of server ips to manage.
        brooklyn.config:
          dontRequireTtyForSudo: true
          start.timeout: 20m
          sshMonitoring.enabled: false
          app.port: 8080
          
          shell.env:
            APP_PORT: $brooklyn:config("app.port")
            ADDR_LIST: $brooklyn:config("server.list")

          install.command: |
            sudo apt -y update
            sudo apt -y install nginx

          customize.command: |  
            sudo systemctl status nginx | grep 'running' > /dev/null 2>&1
            if [ $? == 0 ]; then
              echo "NginX is up. All is well with the world..."
            else
              echo "NginX is down. Starting it..."
              sudo systemctl start nginx
            fi

            echo "NginX - configuring ..."

              cat >/tmp/load-balancer.conf <<ENDOFTEXT
            upstream backend {
            IPXX
            }

            server {
              listen 80;

              location / {
                proxy_pass http://backend;
              }
            }
            ENDOFTEXT

            IFS=',' ADDR=(${ADDR_LIST}); unset IFS;

            # TODO got to figure out how to configure NginX correctly
            SERVERS=''
            for i in "${ADDR[@]}"; do
              i="${i%\"}"
              i="${i#\"}"
              SERVERS="${SERVERS}  server ${i};\n"
            done

            sed -i -e "s/IPXX/${SERVERS}/g" /tmp/load-balancer.conf

            # configure servers to balance
            sudo mv /tmp/load-balancer.conf /etc/nginx/conf.d/
            # remove the default symbolic link from the sites-enabled folder.
            sudo rm /etc/nginx/sites-enabled/default

            echo "NginX - restarting ..."
            sudo systemctl restart nginx

          launch.command: |
            sudo systemctl status nginx | grep 'running' > /dev/null 2>&1
            if [ $? == 0 ]; then
              echo "NginX is up. All is well with the world."
            else
              echo "NginX is down. Starting it..."
              sudo systemctl start nginx
            fi

          stop.command: |
            sudo systemctl status nginx | grep 'running' > /dev/null 2>&1
            if [ $? == 0 ]; then
              echo "NginX is up. Shutting it down..."
              sudo systemctl stop nginx
            else
              echo "NginX is already down."
            fi

          checkRunning.command:
            sudo systemctl status nginx | grep -i -e 'active' -e 'online'

        brooklyn.enrichers:
          - type: org.apache.brooklyn.enricher.stock.Transformer
            brooklyn.config:
              enricher.sourceSensor: $brooklyn:sensor("host.name")
              enricher.targetSensor: $brooklyn:sensor("main.uri")
              enricher.targetValue:
                $brooklyn:formatString:
                  - "http://%s:%s"
                  - $brooklyn:attributeWhenReady("host.name")
                  - $brooklyn:config("app.port")

